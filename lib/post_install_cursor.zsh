#!/usr/bin/env zsh

set -e
set -u
set -o pipefail
IFS=$'\n\t'

if [ -f "$(dirname "$0")/utils.zsh" ]; then
  source "$(dirname "$0")/utils.zsh"
else
  source "$(dirname "$0")/utils.sh"
fi

print_header "Step 11: Cursor global setup"

# Ensure cursor + code CLI installed (user must enable from app if missing)
if ! command_exists cursor; then
  warn "'cursor' CLI not found. In Cursor: Command Palette → Install 'cursor' to shell"
fi
if ! command_exists code; then
  warn "'code' CLI not found. In VS Code: Command Palette → Install 'code' command in PATH"
fi

# Symlink global Cursor commands from repo config to ~/.cursor/commands
REPO_ROOT="$(cd "$(dirname "$0")/.." && pwd)"
REPO_CMDS_DIR="$REPO_ROOT/home/.config/cursor/commands"
TARGET_CMDS_DIR="$HOME/.cursor/commands"

if [ -d "$REPO_CMDS_DIR" ]; then
  info "Linking Cursor global commands to $TARGET_CMDS_DIR"
  mkdir -p "$TARGET_CMDS_DIR"
  while IFS= read -r src; do
    rel="${src#$REPO_CMDS_DIR/}"
    dst="$TARGET_CMDS_DIR/$rel"
    create_symlink "$src" "$dst"
  done < <(find "$REPO_CMDS_DIR" -type f -name '*.md' | sort)
else
  info "No repo commands directory found at $REPO_CMDS_DIR; skipping command links"
fi

# Ensure mcp runner is executable (convenience)
MCP_RUN="$REPO_ROOT/home/.config/cursor/mcp/mcp_run.zsh"
[ -f "$MCP_RUN" ] && chmod +x "$MCP_RUN" || true

# Symlink core Cursor config files to ~/.config/cursor
REPO_CURSOR_DIR="$REPO_ROOT/home/.config/cursor"
TARGET_CURSOR_DIR="$HOME/.cursor"
mkdir -p "$TARGET_CURSOR_DIR/mcp"

# mcp.json goes to ~/.cursor/mcp.json; settings.json is generated by post_install_vscode merge step (from editor settings)
if [ -f "$REPO_CURSOR_DIR/mcp.json" ]; then
  create_symlink "$REPO_CURSOR_DIR/mcp.json" "$TARGET_CURSOR_DIR/mcp.json"
fi

# Symlink mcp_run.zsh into ~/.config/cursor/mcp/
if [ -f "$REPO_CURSOR_DIR/mcp/mcp_run.zsh" ]; then
  create_symlink "$REPO_CURSOR_DIR/mcp/mcp_run.zsh" "$TARGET_CURSOR_DIR/mcp/mcp_run.zsh"
fi

# Install extensions using unified editor installer if available
CURSOR_CFG_DIR="$REPO_ROOT/home/.config/cursor"
EDITOR_CFG_DIR="$REPO_ROOT/home/.config/editor"
if command_exists cursor && [ -f "$EDITOR_CFG_DIR/install-extensions.zsh" ] && [ -f "$EDITOR_CFG_DIR/extensions.txt" ]; then
  info "Installing Cursor extensions from $EDITOR_CFG_DIR/extensions.txt"
  zsh "$EDITOR_CFG_DIR/install-extensions.zsh" --target cursor --extensions-file "$EDITOR_CFG_DIR/extensions.txt" || warn "Unified Cursor extensions install failed"
else
  info "Skipping Cursor extension install (missing CLI or unified installer)."
fi

info "Cursor global setup complete."


